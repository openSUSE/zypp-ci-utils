#! /bin/bash
# ############################################################
source ~ma/bin/oscconf || { exit 99; }
# ############################################################

#set -x
exec 2>&1

function oscstat()
{
  local PRJ="$1"
  local PKG="$2"
  local REV="${3:+-R $3}"
  $OSC LL $REV "$PRJ" "$PKG" | noTZ | grep -v '\(-rpmlintrc\)$'
}

function oscrev()
{
  awk '{print $2; exit 0;}' <<< "$1"
}

function oscvers()
{
  awk '/-[0-9.]*\.tar\./ { v=$7; gsub( "\\.tar\\..*", "", v ); gsub( ".*-", "", v ); print v; exit 0;}' <<< "$1"
}

function oscdiffchanges()
{
  local SPRJ="$1"
  local TPRJ="$2"
  local PKG="$3"

  local TMPDIR=$(mktemp -d)
  trap "[ -d \"$TMPDIR\" ] && /bin/rm -rf -- \"$TMPDIR\" " 0 1 2 3 6 9 13 15

  $OSC cat -e "$SPRJ" "$PKG" "$PKG.changes" >"$TMPDIR/$SPRJ-$PKG.changes"
  $OSC cat -e "$TPRJ" "$PKG" "$PKG.changes" >"$TMPDIR/$TPRJ-$PKG.changes"
  {
    diff -U 0 "$TMPDIR/$TPRJ-$PKG.changes" "$TMPDIR/$SPRJ-$PKG.changes" && echo "@@ MISSING CHANGES ENTRY!!!"
  } | grep -v '^[+-]\{3\}' \
  | awk '
    BEGIN { PRE = 25; PST = 15 }
    ( NR <= PRE ){ print; next }
    { buf[NR] = $0 }
    END {
      if ( NR > PRE )
      {
	s = NR-PST+1
	if ( s <= PRE ) s = PRE+1
	if ( NR != PRE+PST ) print "[...]"
	for ( i = s; i <= NR; ++ i ) print buf[i]
}
    }
  ' | cdiff
  rm -rf -- "$TMPDIR"
}

function _oscdiffstat()
{
  { echo "$TSTAT"; echo "==="; echo "$SSTAT"; } | awk '
  BEGIN { oidx = 64 }
  function Rprint()
  { print "\033[0;31m" $0 "\033[0m" }
  function Bprint()
  { print "\033[0;34m" $0 "\033[0m" }

  /^===$/ { se = 1; next; }
  ( se ) {
    if ( db[$7] == $1 )
      Bprint()
    else
    {
      Rprint()
      ex = 1
      oidx = index( $0, $7 ) - 1
    }
    db[$7] = ""
  }
  ( !se ) {
    db[$7] = $1
  }
  END {
    for ( i in db ) {
      if ( db[i] ) printf "%-*s%s\n", oidx, db[i], i
    }
    exit ex;
  }
  '
}

function oscdiffstat()
{
  local SPRJ="$1"
  local TPRJ="$2"
  local PKG="$3"

  SSTAT="$(oscstat "$SPRJ" "$PKG")"
  TSTAT="$(oscstat "$TPRJ" "$PKG")"

#   echo
#   Becho "== $SPRJ"
#   Becho "$SSTAT"

#   echo
#   Becho "== $TPRJ"
#   Becho "$TSTAT"

  echo
  echo -en "== $PKG\t$SPRJ "; Becho "($TPRJ)"

  _oscdiffstat || {
    test -n "$VERBOSE" || return 1
    R=$(($(oscrev "$SSTAT") - 1))
    while [ $R -ge 1 ]; do
      echo
      SSTAT="$(oscstat "$SPRJ" "$PKG" $R)"
      _oscdiffstat && break
      R=$(($R - 1))
    done
    return 1
  }
  return 0
}

# ############################################################

DEFAULT_CFG="head"

test "$1" = "-a" && {
  ALLPKGS=1
  shift
}
case "$1" in
  -a|--all|all )
    ALLPKGS=1
    shift
    ;;
esac

CFG=${1:-head}
shift

get_oscconf "$CFG" || exit 99

if [ "$ALLPKGS" = 1 ]; then
  PKGS="$($OSC ls "$SPRJ" | grep -v "swig")"
  test -z "$PKGS" && PKGS="libsolv libzypp zypper libzypp-testsuite-tools zypp-plugin" #libzypp-bindings
elif [ -n "$1" ]; then
  PKGS="$@"
fi

RET=0

for PKG in $PKGS; do
  oscdiffstat "$SPRJ" "$TPRJ" "$PKG" || {
    oscdiffchanges "$SPRJ" "$TPRJ" "$PKG"
    if [ "$OSCSUB" == "mr" -o "$OSCSUB" == "xm" ]; then
      #ls -lt "$OSCLOGSDIR/$SPR"
      oscmrstats_diff "$OSC" "$SPRJ" "$PKG"
    else
      RQID=$( $OSC request list "$TPRJ" "$PKG"	\
	      | grep -v -f ~ma/.oscchk.ignore	\
	      | 3>&2 2>&1 >&3 awk '
		/State:/	{ rid=int($1); print }
		/submit:/	{ print }
		END {
		  if ( rid )
		  {
		    print rid >"/dev/stderr"
		  }
		}
	      ' )
      if [ -n "$RQID" ]; then
	SREV=$(oscrev "$SSTAT")
	SVERS=$(oscvers "$SSTAT")
	$OSC request -d show "$RQID" \
	| awk -v srev="$SREV" -v svers="$SVERS" '
	  function Rprint(a)
	  { printf "        \033[0;31m%s\033[0m", a }
	  function Gprint(a)
	  { printf "        \033[0;32m%s\033[0m", a }
	  function Bprint(a)
	  { printf "        \033[0;34m%s\033[0m", a }
	  BEGIN { vis = 0 }
	  /Request created/	{
		 d = $1 == "History:" ? $2 : $1
		 printf "        \033[0;34mRequest created "; system( "date -d" d ); printf "\033[0m"
	  }
	  /^changes files:/	{ vis = 1 }
	  /^old:/		{ vis = 0 }
	  /^new:/		{ vis = 0 }
	  /^spec files:/	{ vis = 0 }
	  ( vis != 1 )		{ next }
	  /^+/			{ Bprint( $0 ); printf "\n" }
	'
      #else
      #  $OSC ls "$TPRJ" "$PKG"
      fi
    fi
    RET=$(($RET+1))
  }
done
exit $RET
